[{"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/index.js":"1","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/reportWebVitals.js":"2","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/App.js":"3","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/pages/Home.js":"4","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/pages/Signup.js":"5","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/pages/Login.js":"6","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/pages/Dashboard.js":"7","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/pages/SinglePost.js":"8","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/components/Header/index.js":"9","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/components/Footer/index.js":"10","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/utils/mutations.js":"11","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/utils/auth.js":"12","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/utils/queries.js":"13","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/components/PostList/index.js":"14","/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/components/PostForm/index.js":"15"},{"size":500,"mtime":1653358641459,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1653358641460,"results":"18","hashOfConfig":"17"},{"size":2264,"mtime":1653358641388,"results":"19","hashOfConfig":"17"},{"size":1134,"mtime":1653358641459,"results":"20","hashOfConfig":"17"},{"size":3195,"mtime":1653358641460,"results":"21","hashOfConfig":"17"},{"size":2966,"mtime":1653358641459,"results":"22","hashOfConfig":"17"},{"size":1519,"mtime":1653358641459,"results":"23","hashOfConfig":"17"},{"size":1411,"mtime":1653358641460,"results":"24","hashOfConfig":"17"},{"size":1674,"mtime":1653358641389,"results":"25","hashOfConfig":"17"},{"size":798,"mtime":1653358641388,"results":"26","hashOfConfig":"17"},{"size":1150,"mtime":1653358641460,"results":"27","hashOfConfig":"17"},{"size":1045,"mtime":1653358641460,"results":"28","hashOfConfig":"17"},{"size":864,"mtime":1653358641460,"results":"29","hashOfConfig":"17"},{"size":1771,"mtime":1653358641389,"results":"30","hashOfConfig":"17"},{"size":3368,"mtime":1653358641389,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ivvypb",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/index.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/reportWebVitals.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/App.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/pages/Home.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/pages/Signup.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/pages/Login.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/pages/Dashboard.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/pages/SinglePost.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/components/Header/index.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/components/Footer/index.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/utils/mutations.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/utils/auth.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/utils/queries.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/components/PostList/index.js",[],"/Users/taylorvanderwolk/Desktop/Anime_Altar/client/src/components/PostForm/index.js",["63"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_POST } from '../../utils/mutations';\nimport { QUERY_POSTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst PostForm = () => {\n  const [postDescription, setPostDescription] = useState('');\n  const [postTitle, setPostTitle] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    update(cache, { data: { addPost } }) {\n      try {\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\n\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: { posts: [addPost, ...posts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      // const { me } = cache.readQuery({ query: QUERY_ME });\n      // cache.writeQuery({\n      //   query: QUERY_ME,\n      //   data: { me: { ...me, posts: [...me.posts, addPost] } },\n      // });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      // const { data } = \n      await addPost({\n        variables: {\n          postDescription,\n          postTitle,\n          // : Auth.getDashboard().data.username,\n        },\n      });\n\n      setPostDescription('');\n      setPostTitle('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const titleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'postTitle') {\n      setPostTitle(value);\n     \n    }\n  };\n\n  const postChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'postDescription' && value.length <= 280) {\n      setPostDescription(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div style={styles.theDiv}>\n      <h3 style={styles.letstalk}>Let's talk anime!</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            onSubmit={handleFormSubmit}\n          >\n            <div>\n              <input name=\"postTitle\" type=\"postTitle\" value={postTitle} onChange={titleChange}>\n\n              </input>\n              <textarea\n                name=\"postDescription\"\n                placeholder=\"Here's a new thought...\"\n                value={postDescription}\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={postChange}\n              ></textarea>\n            </div>\n\n            <div >\n              <button type=\"submit\">\n                Add Post\n              </button>\n            </div>\n            {error && (\n              <div>\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) \n      : (\n        <p>\n          You need to be logged in to share your posts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nconst styles = {\n  theDiv: {\n    textShadow: '5px 5px 7px rgb(151, 151, 143)',\n  },\n  letstalk: {\n    textAlign: 'center',\n    paddingTop: '25px',\n    fontSize: '30px',\n\n  }\n\n}\n\nexport default PostForm;\n",{"ruleId":"64","severity":1,"message":"65","line":6,"column":23,"nodeType":"66","messageId":"67","endLine":6,"endColumn":31},"no-unused-vars","'QUERY_ME' is defined but never used.","Identifier","unusedVar"]